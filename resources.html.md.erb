---
title: PCF Healthwatch Resources
owner: PCF Healthwatch
---

This topic describes resource requirements for Pivotal Cloud Foundry (PCF) Healthwatch.

##<a id="requirements"></a>PCF Healthwatch Tile

You can configure PCF Healthwatch resources in the **Resource Config** section of the PCF Healthwatch tile. By default, PCF Healthwatch automatically selects the instance type that is best suited for each job.

<p class="note"><strong>Note</strong>: The automatically selected values that you see in the <strong>Resource Config</strong> section of the PCF Healthwatch tile depend on the available resources for your PCF deployment.</p>

The following table provides the default resource and IP requirements for installing the PCF Healthwatch tile.

<table border="1" class="nice">
  <thead>
  <tr>
    <th>Resource</th>
    <th>Instances</th>
    <th>CPU</th>
    <th>RAM</th>
    <th>Ephemeral Disk</th>
    <th>Persistent Disk</th>
    <th>Static IP</th>
    <th>Dynamic IP</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Healthwatch Forwarder</td>
    <td>2</td>
    <td>4</td>
    <td>8&nbsp;GB</td>
    <td>30&nbsp;GB</td>
    <td>100&nbsp;GB</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>MySQL Server</td>
    <td>1</td>
    <td>8</td>
    <td>15&nbsp;GB</td>
    <td>30&nbsp;GB</td>
    <td>100&nbsp;GB</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>1</td>
    <td>4</td>
    <td>15&nbsp;GB</td>
    <td>30&nbsp;GB</td>
    <td>100&nbsp;GB</td>
    <td>0</td>
    <td>1</td>
  </tr>
  </tbody>
</table>

##<a id='healthwatch-apps'></a>PCF Healthwatch Functional Apps

The following table provides the default memory usage and instance count for the CF apps pushed to your deployment by PCF Healthwatch. PCF Healthwatch is highly available by default. If you do not require high availability, you can scale down these instance counts.

<p class="note"><strong>Note</strong>: The data in this table assumes PCF Healthwatch is in a steady-state. During deployments, resource usage can potentially double because PCF Healthwatch deploys the apps using the blue-green method.</p>

<table border="1" class="nice">
  <thead>
  <tr>
    <th>Application</th>
    <th>Instances</th>
    <th>RAM</th>
    <th>Disk</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>bosh-health-check</td>
    <td>1</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>bosh-task-check</td>
    <td>2</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>canary-health-check</td>
    <td>2</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>cf-health-check</td>
    <td>2</td>
    <td>500&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>healthwatch</td>
    <td>2</td>
    <td>4&nbsp;GB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>healthwatch-api</td>
    <td>2</td>
    <td>1&nbsp;GB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>healthwatch-worker</td>
    <td>1</td>
    <td>1&nbsp;GB</td>
    <td>1&nbsp;GB</td>
  </tr>
   <tr>
    <td>healthwatch-alerts</td>
    <td>1</td>
    <td>1&nbsp;GB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>healthwatch-aggregator</td>
    <td>1</td>
    <td>1&nbsp;GB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>healthwatch-ingestor</td>
    <td>2</td>
    <td>1&nbsp;GB</td>
    <td>1&nbsp;GB</td>
    </tr>
  <tr>
    <td>healthwatch-meta-monitor</td>
    <td>1</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>opsmanager-health-check</td>
    <td>2</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  <tr>
    <td>ui-health-check</td>
    <td>1</td>
    <td>64&nbsp;MB</td>
    <td>1&nbsp;GB</td>
  </tr>
  </tbody>
</table>

If you want to scale the functional apps created by PCF Healthwatch, see the following recommendations:

* BOSH Director health check (the `bosh-health-check` app).
  Only 1 BOSH Director Health Check can run at a time. This should be considered a hard limit.
* BOSH deployment task check (the `bosh-task-check` app).
  By default, this is scaled to 2. It is recommended not to exceed 3-5 runners at once.
* CLI command health check (the `cf-health-check` app).
  By default, this is scaled to 2. It is recommended not to exceed 3-5 runners at once.
* Canary app uptime and response check (the `canaryapp-health-check` app).
  By default, this is scaled to 2. It is recommended not to exceed 3-5 runners at once.
* Ops Manager uptime check (the `opsmanager-health-check` app).
  By default, this is scaled to 2. It is recommended not to exceed 3-5 runners at once.
* PCF Healthwatch self-monitor and [reporting](monitoring.html) (the `healthwatch-meta-monitor` app). This application should not need to be scaled.
* Redis worker (the `healthwatch-worker` app).
  By default, this is scaled to 4. Follow recommendations for [installing](installing.html#healthwatch-tile) the Healthwatch tile.
* Ingestor (the `healthwatch-ingestor` app).
  By default, this is scaled to 2. Follow recommendations for [installing](installing.html#healthwatch-tile) the Healthwatch tile.
